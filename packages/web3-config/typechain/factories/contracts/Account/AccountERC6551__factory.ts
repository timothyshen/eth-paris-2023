/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AccountERC6551,
  AccountERC6551Interface,
} from "../../../contracts/Account/AccountERC6551";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipCycle",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061108a806100206000396000f3fe60806040526004361061004e5760003560e01c806301ffc9a7146100575780631626ba7e146100945780638da5cb5b146100d15780639e5d4c49146100fc578063fc0c546a1461012c57610055565b3661005557005b005b34801561006357600080fd5b5061007e60048036038101906100799190610880565b610159565b60405161008b91906108c8565b60405180910390f35b3480156100a057600080fd5b506100bb60048036038101906100b69190610a5f565b6102aa565b6040516100c89190610aca565b60405180910390f35b3480156100dd57600080fd5b506100e66102e3565b6040516100f39190610b26565b60405180910390f35b61011660048036038101906101119190610c03565b61038d565b6040516101239190610cf6565b60405180910390f35b34801561013857600080fd5b506101416103f6565b60405161015093929190610d27565b60405180910390f35b6000807f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061022557507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061028d57507feff4d378000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050801561029f5760019150506102a5565b60009150505b919050565b6000806102b56102e3565b90506102c281858561040e565b156102d757631626ba7e60e01b9150506102dd565b60009150505b92915050565b6000806000806102f16105d4565b92509250925046831461030a576000935050505061038a565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016103439190610d5e565b602060405180830381865afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610d8e565b93505050505b90565b6060838573ffffffffffffffffffffffffffffffffffffffff167f47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d285856040516103d8929190610de8565b60405180910390a36103ec85858585610654565b9050949350505050565b60008060006104036105d4565b925092509250909192565b600080600061041d85856106e1565b915091506000600481111561043557610434610e0c565b5b81600481111561044857610447610e0c565b5b14801561048057508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15610490576001925050506105cd565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b88886040516024016104c5929190610e4a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161052f9190610eb6565b600060405180830381855afa9150503d806000811461056a576040519150601f19603f3d011682016040523d82523d6000602084013e61056f565b606091505b5091509150818015610582575060208151145b80156105c65750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906105c49190610ee2565b145b9450505050505b9392505050565b600080600080606067ffffffffffffffff8111156105f5576105f4610934565b5b6040519080825280601f01601f1916602001820160405280156106275781602001600182028036833780820191505090505b50905060ad604d60208301303c808060200190518101906106489190610f62565b93509350935050909192565b606060008573ffffffffffffffffffffffffffffffffffffffff16858585604051610680929190610fda565b60006040518083038185875af1925050503d80600081146106bd576040519150601f19603f3d011682016040523d82523d6000602084013e6106c2565b606091505b508093508192505050806106d857815160208301fd5b50949350505050565b60008060418351036107225760008060006020860151925060408601519150606086015160001a905061071687828585610732565b9450945050505061072b565b60006002915091505b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561076d57600060039150915061080b565b600060018787878760405160008152602001604052604051610792949392919061100f565b6020604051602081039080840390855afa1580156107b4573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108025760006001925092505061080b565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61085d81610828565b811461086857600080fd5b50565b60008135905061087a81610854565b92915050565b6000602082840312156108965761089561081e565b5b60006108a48482850161086b565b91505092915050565b60008115159050919050565b6108c2816108ad565b82525050565b60006020820190506108dd60008301846108b9565b92915050565b6000819050919050565b6108f6816108e3565b811461090157600080fd5b50565b600081359050610913816108ed565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096c82610923565b810181811067ffffffffffffffff8211171561098b5761098a610934565b5b80604052505050565b600061099e610814565b90506109aa8282610963565b919050565b600067ffffffffffffffff8211156109ca576109c9610934565b5b6109d382610923565b9050602081019050919050565b82818337600083830152505050565b6000610a026109fd846109af565b610994565b905082815260208101848484011115610a1e57610a1d61091e565b5b610a298482856109e0565b509392505050565b600082601f830112610a4657610a45610919565b5b8135610a568482602086016109ef565b91505092915050565b60008060408385031215610a7657610a7561081e565b5b6000610a8485828601610904565b925050602083013567ffffffffffffffff811115610aa557610aa4610823565b5b610ab185828601610a31565b9150509250929050565b610ac481610828565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1082610ae5565b9050919050565b610b2081610b05565b82525050565b6000602082019050610b3b6000830184610b17565b92915050565b610b4a81610b05565b8114610b5557600080fd5b50565b600081359050610b6781610b41565b92915050565b6000819050919050565b610b8081610b6d565b8114610b8b57600080fd5b50565b600081359050610b9d81610b77565b92915050565b600080fd5b600080fd5b60008083601f840112610bc357610bc2610919565b5b8235905067ffffffffffffffff811115610be057610bdf610ba3565b5b602083019150836001820283011115610bfc57610bfb610ba8565b5b9250929050565b60008060008060608587031215610c1d57610c1c61081e565b5b6000610c2b87828801610b58565b9450506020610c3c87828801610b8e565b935050604085013567ffffffffffffffff811115610c5d57610c5c610823565b5b610c6987828801610bad565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cb1578082015181840152602081019050610c96565b60008484015250505050565b6000610cc882610c77565b610cd28185610c82565b9350610ce2818560208601610c93565b610ceb81610923565b840191505092915050565b60006020820190508181036000830152610d108184610cbd565b905092915050565b610d2181610b6d565b82525050565b6000606082019050610d3c6000830186610d18565b610d496020830185610b17565b610d566040830184610d18565b949350505050565b6000602082019050610d736000830184610d18565b92915050565b600081519050610d8881610b41565b92915050565b600060208284031215610da457610da361081e565b5b6000610db284828501610d79565b91505092915050565b6000610dc78385610c82565b9350610dd48385846109e0565b610ddd83610923565b840190509392505050565b60006020820190508181036000830152610e03818486610dbb565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610e44816108e3565b82525050565b6000604082019050610e5f6000830185610e3b565b8181036020830152610e718184610cbd565b90509392505050565b600081905092915050565b6000610e9082610c77565b610e9a8185610e7a565b9350610eaa818560208601610c93565b80840191505092915050565b6000610ec28284610e85565b915081905092915050565b600081519050610edc816108ed565b92915050565b600060208284031215610ef857610ef761081e565b5b6000610f0684828501610ecd565b91505092915050565b600081519050610f1e81610b77565b92915050565b6000610f2f82610ae5565b9050919050565b610f3f81610f24565b8114610f4a57600080fd5b50565b600081519050610f5c81610f36565b92915050565b600080600060608486031215610f7b57610f7a61081e565b5b6000610f8986828701610f0f565b9350506020610f9a86828701610f4d565b9250506040610fab86828701610f0f565b9150509250925092565b6000610fc18385610e7a565b9350610fce8385846109e0565b82840190509392505050565b6000610fe7828486610fb5565b91508190509392505050565b600060ff82169050919050565b61100981610ff3565b82525050565b60006080820190506110246000830187610e3b565b6110316020830186611000565b61103e6040830185610e3b565b61104b6060830184610e3b565b9594505050505056fea2646970667358221220c2489fce1c96888ca297d6d2d3121447653ee2c9cde5ab40807efc459d0c392f64736f6c63430008120033";

type AccountERC6551ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountERC6551ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountERC6551__factory extends ContractFactory {
  constructor(...args: AccountERC6551ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountERC6551> {
    return super.deploy(overrides || {}) as Promise<AccountERC6551>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccountERC6551 {
    return super.attach(address) as AccountERC6551;
  }
  override connect(signer: Signer): AccountERC6551__factory {
    return super.connect(signer) as AccountERC6551__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountERC6551Interface {
    return new utils.Interface(_abi) as AccountERC6551Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountERC6551 {
    return new Contract(address, _abi, signerOrProvider) as AccountERC6551;
  }
}
